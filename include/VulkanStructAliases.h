#pragma once
#include "VulkanStructWrapper.h"

namespace vkw
{

using ApplicationInfo = VulkanStructWrapper<VkApplicationInfo, VK_STRUCTURE_TYPE_APPLICATION_INFO>;
using InstanceCreateInfo = VulkanStructWrapper<VkInstanceCreateInfo, VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO>;
using DeviceQueueCreateInfo = VulkanStructWrapper<VkDeviceQueueCreateInfo, VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO>;
using DeviceCreateInfo = VulkanStructWrapper<VkDeviceCreateInfo, VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO>;
using SubmitInfo = VulkanStructWrapper<VkSubmitInfo, VK_STRUCTURE_TYPE_SUBMIT_INFO>;
using MemoryAllocateInfo = VulkanStructWrapper<VkMemoryAllocateInfo, VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO>;
using MappedMemoryRange = VulkanStructWrapper<VkMappedMemoryRange, VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE>;
using BindSparseInfo = VulkanStructWrapper<VkBindSparseInfo, VK_STRUCTURE_TYPE_BIND_SPARSE_INFO>;
using FenceCreateInfo = VulkanStructWrapper<VkFenceCreateInfo, VK_STRUCTURE_TYPE_FENCE_CREATE_INFO>;
using SemaphoreCreateInfo = VulkanStructWrapper<VkSemaphoreCreateInfo, VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO>;
using EventCreateInfo = VulkanStructWrapper<VkEventCreateInfo, VK_STRUCTURE_TYPE_EVENT_CREATE_INFO>;
using QueryPoolCreateInfo = VulkanStructWrapper<VkQueryPoolCreateInfo, VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO>;
using BufferCreateInfo = VulkanStructWrapper<VkBufferCreateInfo, VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO>;
using BufferViewCreateInfo = VulkanStructWrapper<VkBufferViewCreateInfo, VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO>;
using ImageCreateInfo = VulkanStructWrapper<VkImageCreateInfo, VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO>;
using ImageViewCreateInfo = VulkanStructWrapper<VkImageViewCreateInfo, VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO>;
using ShaderModuleCreateInfo = VulkanStructWrapper<VkShaderModuleCreateInfo, VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO>;
using PipelineCacheCreateInfo = VulkanStructWrapper<VkPipelineCacheCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO>;
using PipelineShaderStageCreateInfo = VulkanStructWrapper<VkPipelineShaderStageCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO>;
using PipelineVertexInputStateCreateInfo = VulkanStructWrapper<VkPipelineVertexInputStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO>;
using PipelineInputAssemblyStateCreateInfo = VulkanStructWrapper<VkPipelineInputAssemblyStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO>;
using PipelineTessellationStateCreateInfo = VulkanStructWrapper<VkPipelineTessellationStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO>;
using PipelineViewportStateCreateInfo = VulkanStructWrapper<VkPipelineViewportStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO>;
using PipelineRasterizationStateCreateInfo = VulkanStructWrapper<VkPipelineRasterizationStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO>;
using PipelineMultisampleStateCreateInfo = VulkanStructWrapper<VkPipelineMultisampleStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO>;
using PipelineDepthStencilStateCreateInfo = VulkanStructWrapper<VkPipelineDepthStencilStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO>;
using PipelineColorBlendStateCreateInfo = VulkanStructWrapper<VkPipelineColorBlendStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO>;
using PipelineDynamicStateCreateInfo = VulkanStructWrapper<VkPipelineDynamicStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO>;
using GraphicsPipelineCreateInfo = VulkanStructWrapper<VkGraphicsPipelineCreateInfo, VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO>;
using ComputePipelineCreateInfo = VulkanStructWrapper<VkComputePipelineCreateInfo, VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO>;
using PipelineLayoutCreateInfo = VulkanStructWrapper<VkPipelineLayoutCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO>;
using SamplerCreateInfo = VulkanStructWrapper<VkSamplerCreateInfo, VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO>;
using DescriptorSetLayoutCreateInfo = VulkanStructWrapper<VkDescriptorSetLayoutCreateInfo, VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO>;
using DescriptorPoolCreateInfo = VulkanStructWrapper<VkDescriptorPoolCreateInfo, VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO>;
using DescriptorSetAllocateInfo = VulkanStructWrapper<VkDescriptorSetAllocateInfo, VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO>;
using WriteDescriptorSet = VulkanStructWrapper<VkWriteDescriptorSet, VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET>;
using CopyDescriptorSet = VulkanStructWrapper<VkCopyDescriptorSet, VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET>;
using FramebufferCreateInfo = VulkanStructWrapper<VkFramebufferCreateInfo, VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO>;
using RenderPassCreateInfo = VulkanStructWrapper<VkRenderPassCreateInfo, VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO>;
using CommandPoolCreateInfo = VulkanStructWrapper<VkCommandPoolCreateInfo, VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO>;
using CommandBufferAllocateInfo = VulkanStructWrapper<VkCommandBufferAllocateInfo, VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO>;
using CommandBufferInheritanceInfo = VulkanStructWrapper<VkCommandBufferInheritanceInfo, VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO>;
using CommandBufferBeginInfo = VulkanStructWrapper<VkCommandBufferBeginInfo, VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO>;
using RenderPassBeginInfo = VulkanStructWrapper<VkRenderPassBeginInfo, VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO>;
using BufferMemoryBarrier = VulkanStructWrapper<VkBufferMemoryBarrier, VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER>;
using ImageMemoryBarrier = VulkanStructWrapper<VkImageMemoryBarrier, VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER>;
using MemoryBarrier = VulkanStructWrapper<VkMemoryBarrier, VK_STRUCTURE_TYPE_MEMORY_BARRIER>;

#ifdef VK_API_VERSION_1_1
using PhysicalDeviceSubgroupProperties = VulkanStructWrapper<VkPhysicalDeviceSubgroupProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES>;
using BindBufferMemoryInfo = VulkanStructWrapper<VkBindBufferMemoryInfo, VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO>;
using BindImageMemoryInfo = VulkanStructWrapper<VkBindImageMemoryInfo, VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO>;
using PhysicalDevice16BitStorageFeatures = VulkanStructWrapper<VkPhysicalDevice16BitStorageFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES>;
using MemoryDedicatedRequirements = VulkanStructWrapper<VkMemoryDedicatedRequirements, VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS>;
using MemoryDedicatedAllocateInfo = VulkanStructWrapper<VkMemoryDedicatedAllocateInfo, VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO>;
using MemoryAllocateFlagsInfo = VulkanStructWrapper<VkMemoryAllocateFlagsInfo, VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO>;
using DeviceGroupRenderPassBeginInfo = VulkanStructWrapper<VkDeviceGroupRenderPassBeginInfo, VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO>;
using DeviceGroupCommandBufferBeginInfo = VulkanStructWrapper<VkDeviceGroupCommandBufferBeginInfo, VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO>;
using DeviceGroupSubmitInfo = VulkanStructWrapper<VkDeviceGroupSubmitInfo, VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO>;
using DeviceGroupBindSparseInfo = VulkanStructWrapper<VkDeviceGroupBindSparseInfo, VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO>;
using BindBufferMemoryDeviceGroupInfo = VulkanStructWrapper<VkBindBufferMemoryDeviceGroupInfo, VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO>;
using BindImageMemoryDeviceGroupInfo = VulkanStructWrapper<VkBindImageMemoryDeviceGroupInfo, VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO>;
using PhysicalDeviceGroupProperties = VulkanStructWrapper<VkPhysicalDeviceGroupProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES>;
using DeviceGroupDeviceCreateInfo = VulkanStructWrapper<VkDeviceGroupDeviceCreateInfo, VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO>;
using BufferMemoryRequirementsInfo2 = VulkanStructWrapper<VkBufferMemoryRequirementsInfo2, VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2>;
using ImageMemoryRequirementsInfo2 = VulkanStructWrapper<VkImageMemoryRequirementsInfo2, VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2>;
using ImageSparseMemoryRequirementsInfo2 = VulkanStructWrapper<VkImageSparseMemoryRequirementsInfo2, VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2>;
using MemoryRequirements2 = VulkanStructWrapper<VkMemoryRequirements2, VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2>;
using SparseImageMemoryRequirements2 = VulkanStructWrapper<VkSparseImageMemoryRequirements2, VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2>;
using PhysicalDeviceFeatures2 = VulkanStructWrapper<VkPhysicalDeviceFeatures2, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2>;
using PhysicalDeviceProperties2 = VulkanStructWrapper<VkPhysicalDeviceProperties2, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2>;
using FormatProperties2 = VulkanStructWrapper<VkFormatProperties2, VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2>;
using ImageFormatProperties2 = VulkanStructWrapper<VkImageFormatProperties2, VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2>;
using PhysicalDeviceImageFormatInfo2 = VulkanStructWrapper<VkPhysicalDeviceImageFormatInfo2, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2>;
using QueueFamilyProperties2 = VulkanStructWrapper<VkQueueFamilyProperties2, VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2>;
using PhysicalDeviceMemoryProperties2 = VulkanStructWrapper<VkPhysicalDeviceMemoryProperties2, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2>;
using SparseImageFormatProperties2 = VulkanStructWrapper<VkSparseImageFormatProperties2, VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2>;
using PhysicalDeviceSparseImageFormatInfo2 = VulkanStructWrapper<VkPhysicalDeviceSparseImageFormatInfo2, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2>;
using PhysicalDevicePointClippingProperties = VulkanStructWrapper<VkPhysicalDevicePointClippingProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES>;
using RenderPassInputAttachmentAspectCreateInfo = VulkanStructWrapper<VkRenderPassInputAttachmentAspectCreateInfo, VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO>;
using ImageViewUsageCreateInfo = VulkanStructWrapper<VkImageViewUsageCreateInfo, VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO>;
using PipelineTessellationDomainOriginStateCreateInfo = VulkanStructWrapper<VkPipelineTessellationDomainOriginStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO>;
using RenderPassMultiviewCreateInfo = VulkanStructWrapper<VkRenderPassMultiviewCreateInfo, VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO>;
using PhysicalDeviceMultiviewFeatures = VulkanStructWrapper<VkPhysicalDeviceMultiviewFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES>;
using PhysicalDeviceMultiviewProperties = VulkanStructWrapper<VkPhysicalDeviceMultiviewProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES>;
using PhysicalDeviceVariablePointersFeatures = VulkanStructWrapper<VkPhysicalDeviceVariablePointersFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES>;
using ProtectedSubmitInfo = VulkanStructWrapper<VkProtectedSubmitInfo, VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO>;
using PhysicalDeviceProtectedMemoryFeatures = VulkanStructWrapper<VkPhysicalDeviceProtectedMemoryFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES>;
using PhysicalDeviceProtectedMemoryProperties = VulkanStructWrapper<VkPhysicalDeviceProtectedMemoryProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES>;
using DeviceQueueInfo2 = VulkanStructWrapper<VkDeviceQueueInfo2, VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2>;
using SamplerYcbcrConversionCreateInfo = VulkanStructWrapper<VkSamplerYcbcrConversionCreateInfo, VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO>;
using SamplerYcbcrConversionInfo = VulkanStructWrapper<VkSamplerYcbcrConversionInfo, VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO>;
using BindImagePlaneMemoryInfo = VulkanStructWrapper<VkBindImagePlaneMemoryInfo, VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO>;
using ImagePlaneMemoryRequirementsInfo = VulkanStructWrapper<VkImagePlaneMemoryRequirementsInfo, VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO>;
using PhysicalDeviceSamplerYcbcrConversionFeatures = VulkanStructWrapper<VkPhysicalDeviceSamplerYcbcrConversionFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES>;
using SamplerYcbcrConversionImageFormatProperties = VulkanStructWrapper<VkSamplerYcbcrConversionImageFormatProperties, VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES>;
using DescriptorUpdateTemplateCreateInfo = VulkanStructWrapper<VkDescriptorUpdateTemplateCreateInfo, VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO>;
using PhysicalDeviceExternalImageFormatInfo = VulkanStructWrapper<VkPhysicalDeviceExternalImageFormatInfo, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO>;
using ExternalImageFormatProperties = VulkanStructWrapper<VkExternalImageFormatProperties, VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES>;
using PhysicalDeviceExternalBufferInfo = VulkanStructWrapper<VkPhysicalDeviceExternalBufferInfo, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO>;
using ExternalBufferProperties = VulkanStructWrapper<VkExternalBufferProperties, VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES>;
using PhysicalDeviceIDProperties = VulkanStructWrapper<VkPhysicalDeviceIDProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES>;
using ExternalMemoryBufferCreateInfo = VulkanStructWrapper<VkExternalMemoryBufferCreateInfo, VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO>;
using ExternalMemoryImageCreateInfo = VulkanStructWrapper<VkExternalMemoryImageCreateInfo, VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO>;
using ExportMemoryAllocateInfo = VulkanStructWrapper<VkExportMemoryAllocateInfo, VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO>;
using PhysicalDeviceExternalFenceInfo = VulkanStructWrapper<VkPhysicalDeviceExternalFenceInfo, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO>;
using ExternalFenceProperties = VulkanStructWrapper<VkExternalFenceProperties, VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES>;
using ExportFenceCreateInfo = VulkanStructWrapper<VkExportFenceCreateInfo, VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO>;
using ExportSemaphoreCreateInfo = VulkanStructWrapper<VkExportSemaphoreCreateInfo, VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO>;
using PhysicalDeviceExternalSemaphoreInfo = VulkanStructWrapper<VkPhysicalDeviceExternalSemaphoreInfo, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO>;
using ExternalSemaphoreProperties = VulkanStructWrapper<VkExternalSemaphoreProperties, VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES>;
using PhysicalDeviceMaintenance3Properties = VulkanStructWrapper<VkPhysicalDeviceMaintenance3Properties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES>;
using DescriptorSetLayoutSupport = VulkanStructWrapper<VkDescriptorSetLayoutSupport, VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT>;
using PhysicalDeviceShaderDrawParametersFeatures = VulkanStructWrapper<VkPhysicalDeviceShaderDrawParametersFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES>;
#endif

#ifdef VK_API_VERSION_1_2
using PhysicalDeviceVulkan11Features = VulkanStructWrapper<VkPhysicalDeviceVulkan11Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES>;
using PhysicalDeviceVulkan11Properties = VulkanStructWrapper<VkPhysicalDeviceVulkan11Properties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES>;
using PhysicalDeviceVulkan12Features = VulkanStructWrapper<VkPhysicalDeviceVulkan12Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES>;
using PhysicalDeviceVulkan12Properties = VulkanStructWrapper<VkPhysicalDeviceVulkan12Properties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES>;
using ImageFormatListCreateInfo = VulkanStructWrapper<VkImageFormatListCreateInfo, VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO>;
using AttachmentDescription2 = VulkanStructWrapper<VkAttachmentDescription2, VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2>;
using AttachmentReference2 = VulkanStructWrapper<VkAttachmentReference2, VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2>;
using SubpassDescription2 = VulkanStructWrapper<VkSubpassDescription2, VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2>;
using SubpassDependency2 = VulkanStructWrapper<VkSubpassDependency2, VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2>;
using RenderPassCreateInfo2 = VulkanStructWrapper<VkRenderPassCreateInfo2, VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2>;
using SubpassBeginInfo = VulkanStructWrapper<VkSubpassBeginInfo, VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO>;
using SubpassEndInfo = VulkanStructWrapper<VkSubpassEndInfo, VK_STRUCTURE_TYPE_SUBPASS_END_INFO>;
using PhysicalDevice8BitStorageFeatures = VulkanStructWrapper<VkPhysicalDevice8BitStorageFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES>;
using PhysicalDeviceDriverProperties = VulkanStructWrapper<VkPhysicalDeviceDriverProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES>;
using PhysicalDeviceShaderAtomicInt64Features = VulkanStructWrapper<VkPhysicalDeviceShaderAtomicInt64Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES>;
using PhysicalDeviceShaderFloat16Int8Features = VulkanStructWrapper<VkPhysicalDeviceShaderFloat16Int8Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES>;
using PhysicalDeviceFloatControlsProperties = VulkanStructWrapper<VkPhysicalDeviceFloatControlsProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES>;
using DescriptorSetLayoutBindingFlagsCreateInfo = VulkanStructWrapper<VkDescriptorSetLayoutBindingFlagsCreateInfo, VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO>;
using PhysicalDeviceDescriptorIndexingFeatures = VulkanStructWrapper<VkPhysicalDeviceDescriptorIndexingFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES>;
using PhysicalDeviceDescriptorIndexingProperties = VulkanStructWrapper<VkPhysicalDeviceDescriptorIndexingProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES>;
using DescriptorSetVariableDescriptorCountAllocateInfo = VulkanStructWrapper<VkDescriptorSetVariableDescriptorCountAllocateInfo, VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO>;
using DescriptorSetVariableDescriptorCountLayoutSupport = VulkanStructWrapper<VkDescriptorSetVariableDescriptorCountLayoutSupport, VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT>;
using PhysicalDeviceDepthStencilResolveProperties = VulkanStructWrapper<VkPhysicalDeviceDepthStencilResolveProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES>;
using SubpassDescriptionDepthStencilResolve = VulkanStructWrapper<VkSubpassDescriptionDepthStencilResolve, VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE>;
using PhysicalDeviceScalarBlockLayoutFeatures = VulkanStructWrapper<VkPhysicalDeviceScalarBlockLayoutFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES>;
using ImageStencilUsageCreateInfo = VulkanStructWrapper<VkImageStencilUsageCreateInfo, VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO>;
using PhysicalDeviceSamplerFilterMinmaxProperties = VulkanStructWrapper<VkPhysicalDeviceSamplerFilterMinmaxProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES>;
using SamplerReductionModeCreateInfo = VulkanStructWrapper<VkSamplerReductionModeCreateInfo, VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO>;
using PhysicalDeviceVulkanMemoryModelFeatures = VulkanStructWrapper<VkPhysicalDeviceVulkanMemoryModelFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES>;
using PhysicalDeviceImagelessFramebufferFeatures = VulkanStructWrapper<VkPhysicalDeviceImagelessFramebufferFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES>;
using FramebufferAttachmentsCreateInfo = VulkanStructWrapper<VkFramebufferAttachmentsCreateInfo, VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO>;
using FramebufferAttachmentImageInfo = VulkanStructWrapper<VkFramebufferAttachmentImageInfo, VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO>;
using RenderPassAttachmentBeginInfo = VulkanStructWrapper<VkRenderPassAttachmentBeginInfo, VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO>;
using PhysicalDeviceUniformBufferStandardLayoutFeatures = VulkanStructWrapper<VkPhysicalDeviceUniformBufferStandardLayoutFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES>;
using PhysicalDeviceShaderSubgroupExtendedTypesFeatures = VulkanStructWrapper<VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES>;
using PhysicalDeviceSeparateDepthStencilLayoutsFeatures = VulkanStructWrapper<VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES>;
using AttachmentReferenceStencilLayout = VulkanStructWrapper<VkAttachmentReferenceStencilLayout, VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT>;
using AttachmentDescriptionStencilLayout = VulkanStructWrapper<VkAttachmentDescriptionStencilLayout, VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT>;
using PhysicalDeviceHostQueryResetFeatures = VulkanStructWrapper<VkPhysicalDeviceHostQueryResetFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES>;
using PhysicalDeviceTimelineSemaphoreFeatures = VulkanStructWrapper<VkPhysicalDeviceTimelineSemaphoreFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES>;
using PhysicalDeviceTimelineSemaphoreProperties = VulkanStructWrapper<VkPhysicalDeviceTimelineSemaphoreProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES>;
using SemaphoreTypeCreateInfo = VulkanStructWrapper<VkSemaphoreTypeCreateInfo, VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO>;
using TimelineSemaphoreSubmitInfo = VulkanStructWrapper<VkTimelineSemaphoreSubmitInfo, VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO>;
using SemaphoreWaitInfo = VulkanStructWrapper<VkSemaphoreWaitInfo, VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO>;
using SemaphoreSignalInfo = VulkanStructWrapper<VkSemaphoreSignalInfo, VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO>;
using PhysicalDeviceBufferDeviceAddressFeatures = VulkanStructWrapper<VkPhysicalDeviceBufferDeviceAddressFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES>;
using BufferDeviceAddressInfo = VulkanStructWrapper<VkBufferDeviceAddressInfo, VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO>;
using BufferOpaqueCaptureAddressCreateInfo = VulkanStructWrapper<VkBufferOpaqueCaptureAddressCreateInfo, VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO>;
using MemoryOpaqueCaptureAddressAllocateInfo = VulkanStructWrapper<VkMemoryOpaqueCaptureAddressAllocateInfo, VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO>;
using DeviceMemoryOpaqueCaptureAddressInfo = VulkanStructWrapper<VkDeviceMemoryOpaqueCaptureAddressInfo, VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO>;
#endif

#ifdef VK_API_VERSION_1_3
using PhysicalDeviceVulkan13Features = VulkanStructWrapper<VkPhysicalDeviceVulkan13Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES>;
using PhysicalDeviceVulkan13Properties = VulkanStructWrapper<VkPhysicalDeviceVulkan13Properties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES>;
using PipelineCreationFeedbackCreateInfo = VulkanStructWrapper<VkPipelineCreationFeedbackCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO>;
using PhysicalDeviceShaderTerminateInvocationFeatures = VulkanStructWrapper<VkPhysicalDeviceShaderTerminateInvocationFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES>;
using PhysicalDeviceToolProperties = VulkanStructWrapper<VkPhysicalDeviceToolProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES>;
using PhysicalDeviceShaderDemoteToHelperInvocationFeatures = VulkanStructWrapper<VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES>;
using PhysicalDevicePrivateDataFeatures = VulkanStructWrapper<VkPhysicalDevicePrivateDataFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES>;
using DevicePrivateDataCreateInfo = VulkanStructWrapper<VkDevicePrivateDataCreateInfo, VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO>;
using PrivateDataSlotCreateInfo = VulkanStructWrapper<VkPrivateDataSlotCreateInfo, VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO>;
using PhysicalDevicePipelineCreationCacheControlFeatures = VulkanStructWrapper<VkPhysicalDevicePipelineCreationCacheControlFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES>;
using MemoryBarrier2 = VulkanStructWrapper<VkMemoryBarrier2, VK_STRUCTURE_TYPE_MEMORY_BARRIER_2>;
using BufferMemoryBarrier2 = VulkanStructWrapper<VkBufferMemoryBarrier2, VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2>;
using ImageMemoryBarrier2 = VulkanStructWrapper<VkImageMemoryBarrier2, VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2>;
using DependencyInfo = VulkanStructWrapper<VkDependencyInfo, VK_STRUCTURE_TYPE_DEPENDENCY_INFO>;
using SubmitInfo2 = VulkanStructWrapper<VkSubmitInfo2, VK_STRUCTURE_TYPE_SUBMIT_INFO_2>;
using SemaphoreSubmitInfo = VulkanStructWrapper<VkSemaphoreSubmitInfo, VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO>;
using CommandBufferSubmitInfo = VulkanStructWrapper<VkCommandBufferSubmitInfo, VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO>;
using PhysicalDeviceSynchronization2Features = VulkanStructWrapper<VkPhysicalDeviceSynchronization2Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES>;
using PhysicalDeviceZeroInitializeWorkgroupMemoryFeatures = VulkanStructWrapper<VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES>;
using PhysicalDeviceImageRobustnessFeatures = VulkanStructWrapper<VkPhysicalDeviceImageRobustnessFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES>;
using CopyBufferInfo2 = VulkanStructWrapper<VkCopyBufferInfo2, VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2>;
using CopyImageInfo2 = VulkanStructWrapper<VkCopyImageInfo2, VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2>;
using CopyBufferToImageInfo2 = VulkanStructWrapper<VkCopyBufferToImageInfo2, VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2>;
using CopyImageToBufferInfo2 = VulkanStructWrapper<VkCopyImageToBufferInfo2, VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2>;
using BlitImageInfo2 = VulkanStructWrapper<VkBlitImageInfo2, VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2>;
using ResolveImageInfo2 = VulkanStructWrapper<VkResolveImageInfo2, VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2>;
using BufferCopy2 = VulkanStructWrapper<VkBufferCopy2, VK_STRUCTURE_TYPE_BUFFER_COPY_2>;
using ImageCopy2 = VulkanStructWrapper<VkImageCopy2, VK_STRUCTURE_TYPE_IMAGE_COPY_2>;
using ImageBlit2 = VulkanStructWrapper<VkImageBlit2, VK_STRUCTURE_TYPE_IMAGE_BLIT_2>;
using BufferImageCopy2 = VulkanStructWrapper<VkBufferImageCopy2, VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2>;
using ImageResolve2 = VulkanStructWrapper<VkImageResolve2, VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2>;
using PhysicalDeviceSubgroupSizeControlProperties = VulkanStructWrapper<VkPhysicalDeviceSubgroupSizeControlProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES>;
using PipelineShaderStageRequiredSubgroupSizeCreateInfo = VulkanStructWrapper<VkPipelineShaderStageRequiredSubgroupSizeCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO>;
using PhysicalDeviceSubgroupSizeControlFeatures = VulkanStructWrapper<VkPhysicalDeviceSubgroupSizeControlFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES>;
using PhysicalDeviceInlineUniformBlockFeatures = VulkanStructWrapper<VkPhysicalDeviceInlineUniformBlockFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES>;
using PhysicalDeviceInlineUniformBlockProperties = VulkanStructWrapper<VkPhysicalDeviceInlineUniformBlockProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES>;
using WriteDescriptorSetInlineUniformBlock = VulkanStructWrapper<VkWriteDescriptorSetInlineUniformBlock, VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK>;
using DescriptorPoolInlineUniformBlockCreateInfo = VulkanStructWrapper<VkDescriptorPoolInlineUniformBlockCreateInfo, VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO>;
using PhysicalDeviceTextureCompressionASTCHDRFeatures = VulkanStructWrapper<VkPhysicalDeviceTextureCompressionASTCHDRFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES>;
using RenderingInfo = VulkanStructWrapper<VkRenderingInfo, VK_STRUCTURE_TYPE_RENDERING_INFO>;
using RenderingAttachmentInfo = VulkanStructWrapper<VkRenderingAttachmentInfo, VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO>;
using PipelineRenderingCreateInfo = VulkanStructWrapper<VkPipelineRenderingCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO>;
using PhysicalDeviceDynamicRenderingFeatures = VulkanStructWrapper<VkPhysicalDeviceDynamicRenderingFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES>;
using CommandBufferInheritanceRenderingInfo = VulkanStructWrapper<VkCommandBufferInheritanceRenderingInfo, VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO>;
using PhysicalDeviceShaderIntegerDotProductFeatures = VulkanStructWrapper<VkPhysicalDeviceShaderIntegerDotProductFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES>;
using PhysicalDeviceShaderIntegerDotProductProperties = VulkanStructWrapper<VkPhysicalDeviceShaderIntegerDotProductProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES>;
using PhysicalDeviceTexelBufferAlignmentProperties = VulkanStructWrapper<VkPhysicalDeviceTexelBufferAlignmentProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES>;
using FormatProperties3 = VulkanStructWrapper<VkFormatProperties3, VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3>;
using PhysicalDeviceMaintenance4Features = VulkanStructWrapper<VkPhysicalDeviceMaintenance4Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES>;
using PhysicalDeviceMaintenance4Properties = VulkanStructWrapper<VkPhysicalDeviceMaintenance4Properties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES>;
using DeviceBufferMemoryRequirements = VulkanStructWrapper<VkDeviceBufferMemoryRequirements, VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS>;
using DeviceImageMemoryRequirements = VulkanStructWrapper<VkDeviceImageMemoryRequirements, VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS>;
#endif

#ifdef VK_API_VERSION_1_4
using PhysicalDeviceVulkan14Features = VulkanStructWrapper<VkPhysicalDeviceVulkan14Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_4_FEATURES>;
using PhysicalDeviceVulkan14Properties = VulkanStructWrapper<VkPhysicalDeviceVulkan14Properties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_4_PROPERTIES>;
using DeviceQueueGlobalPriorityCreateInfo = VulkanStructWrapper<VkDeviceQueueGlobalPriorityCreateInfo, VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO>;
using PhysicalDeviceGlobalPriorityQueryFeatures = VulkanStructWrapper<VkPhysicalDeviceGlobalPriorityQueryFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES>;
using QueueFamilyGlobalPriorityProperties = VulkanStructWrapper<VkQueueFamilyGlobalPriorityProperties, VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES>;
using PhysicalDeviceShaderSubgroupRotateFeatures = VulkanStructWrapper<VkPhysicalDeviceShaderSubgroupRotateFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES>;
using PhysicalDeviceShaderFloatControls2Features = VulkanStructWrapper<VkPhysicalDeviceShaderFloatControls2Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES>;
using PhysicalDeviceShaderExpectAssumeFeatures = VulkanStructWrapper<VkPhysicalDeviceShaderExpectAssumeFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES>;
using PhysicalDeviceLineRasterizationFeatures = VulkanStructWrapper<VkPhysicalDeviceLineRasterizationFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES>;
using PipelineRasterizationLineStateCreateInfo = VulkanStructWrapper<VkPipelineRasterizationLineStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO>;
using PhysicalDeviceLineRasterizationProperties = VulkanStructWrapper<VkPhysicalDeviceLineRasterizationProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES>;
using PhysicalDeviceVertexAttributeDivisorProperties = VulkanStructWrapper<VkPhysicalDeviceVertexAttributeDivisorProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES>;
using PipelineVertexInputDivisorStateCreateInfo = VulkanStructWrapper<VkPipelineVertexInputDivisorStateCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO>;
using PhysicalDeviceVertexAttributeDivisorFeatures = VulkanStructWrapper<VkPhysicalDeviceVertexAttributeDivisorFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES>;
using PhysicalDeviceIndexTypeUint8Features = VulkanStructWrapper<VkPhysicalDeviceIndexTypeUint8Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES>;
using MemoryMapInfo = VulkanStructWrapper<VkMemoryMapInfo, VK_STRUCTURE_TYPE_MEMORY_MAP_INFO>;
using MemoryUnmapInfo = VulkanStructWrapper<VkMemoryUnmapInfo, VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO>;
using PhysicalDeviceMaintenance5Features = VulkanStructWrapper<VkPhysicalDeviceMaintenance5Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES>;
using PhysicalDeviceMaintenance5Properties = VulkanStructWrapper<VkPhysicalDeviceMaintenance5Properties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES>;
using RenderingAreaInfo = VulkanStructWrapper<VkRenderingAreaInfo, VK_STRUCTURE_TYPE_RENDERING_AREA_INFO>;
using DeviceImageSubresourceInfo = VulkanStructWrapper<VkDeviceImageSubresourceInfo, VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO>;
using SubresourceLayout2 = VulkanStructWrapper<VkSubresourceLayout2, VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2>;
using ImageSubresource2 = VulkanStructWrapper<VkImageSubresource2, VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2>;
using PipelineCreateFlags2CreateInfo = VulkanStructWrapper<VkPipelineCreateFlags2CreateInfo, VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO>;
using BufferUsageFlags2CreateInfo = VulkanStructWrapper<VkBufferUsageFlags2CreateInfo, VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO>;
using PhysicalDevicePushDescriptorProperties = VulkanStructWrapper<VkPhysicalDevicePushDescriptorProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES>;
using PhysicalDeviceDynamicRenderingLocalReadFeatures = VulkanStructWrapper<VkPhysicalDeviceDynamicRenderingLocalReadFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES>;
using RenderingAttachmentLocationInfo = VulkanStructWrapper<VkRenderingAttachmentLocationInfo, VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_LOCATION_INFO>;
using RenderingInputAttachmentIndexInfo = VulkanStructWrapper<VkRenderingInputAttachmentIndexInfo, VK_STRUCTURE_TYPE_RENDERING_INPUT_ATTACHMENT_INDEX_INFO>;
using PhysicalDeviceMaintenance6Features = VulkanStructWrapper<VkPhysicalDeviceMaintenance6Features, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES>;
using PhysicalDeviceMaintenance6Properties = VulkanStructWrapper<VkPhysicalDeviceMaintenance6Properties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES>;
using BindMemoryStatus = VulkanStructWrapper<VkBindMemoryStatus, VK_STRUCTURE_TYPE_BIND_MEMORY_STATUS>;
using BindDescriptorSetsInfo = VulkanStructWrapper<VkBindDescriptorSetsInfo, VK_STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO>;
using PushConstantsInfo = VulkanStructWrapper<VkPushConstantsInfo, VK_STRUCTURE_TYPE_PUSH_CONSTANTS_INFO>;
using PushDescriptorSetInfo = VulkanStructWrapper<VkPushDescriptorSetInfo, VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO>;
using PushDescriptorSetWithTemplateInfo = VulkanStructWrapper<VkPushDescriptorSetWithTemplateInfo, VK_STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO>;
using PhysicalDevicePipelineProtectedAccessFeatures = VulkanStructWrapper<VkPhysicalDevicePipelineProtectedAccessFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES>;
using PipelineRobustnessCreateInfo = VulkanStructWrapper<VkPipelineRobustnessCreateInfo, VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO>;
using PhysicalDevicePipelineRobustnessFeatures = VulkanStructWrapper<VkPhysicalDevicePipelineRobustnessFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES>;
using PhysicalDevicePipelineRobustnessProperties = VulkanStructWrapper<VkPhysicalDevicePipelineRobustnessProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES>;
using PhysicalDeviceHostImageCopyFeatures = VulkanStructWrapper<VkPhysicalDeviceHostImageCopyFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES>;
using PhysicalDeviceHostImageCopyProperties = VulkanStructWrapper<VkPhysicalDeviceHostImageCopyProperties, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES>;
using MemoryToImageCopy = VulkanStructWrapper<VkMemoryToImageCopy, VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY>;
using ImageToMemoryCopy = VulkanStructWrapper<VkImageToMemoryCopy, VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY>;
using CopyImageToMemoryInfo = VulkanStructWrapper<VkCopyImageToMemoryInfo, VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO>;
using CopyMemoryToImageInfo = VulkanStructWrapper<VkCopyMemoryToImageInfo, VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO>;
using HostImageLayoutTransitionInfo = VulkanStructWrapper<VkHostImageLayoutTransitionInfo, VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO>;
using CopyImageToImageInfo = VulkanStructWrapper<VkCopyImageToImageInfo, VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO>;
using SubresourceHostMemcpySize = VulkanStructWrapper<VkSubresourceHostMemcpySize, VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE>;
using HostImageCopyDevicePerformanceQuery = VulkanStructWrapper<VkHostImageCopyDevicePerformanceQuery, VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY>;
#endif

#ifdef VK_API_VERSION_1_1
using PhysicalDeviceVariablePointerFeatures = VulkanStructWrapper<VkPhysicalDeviceVariablePointerFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES>;
using PhysicalDeviceVariablePointersFeatures = VulkanStructWrapper<VkPhysicalDeviceVariablePointersFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES>;
using PhysicalDeviceShaderDrawParameterFeatures = VulkanStructWrapper<VkPhysicalDeviceShaderDrawParameterFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES>;
using PhysicalDeviceShaderDrawParametersFeatures = VulkanStructWrapper<VkPhysicalDeviceShaderDrawParametersFeatures, VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES>;
#endif

}
